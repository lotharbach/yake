# FIXME: only generate parts if garden object has oidcConfig and/or garderDashboard fields

{{- define "garden.issuerURL" -}}
{{- (print (lookup "operator.gardener.cloud/v1alpha1" "Garden" "" .Values.garden.name).spec.virtualCluster.kubernetes.kubeAPIServer.oidcConfig.issuerURL) }}
{{- end -}}

# FIXME should be a range over all domains
{{- define "dashboard.domain" -}}
{{- (print "dashboard." (first (lookup "operator.gardener.cloud/v1alpha1" "Garden" "" "yake-local").spec.runtimeCluster.ingress.domains)) }}
{{- end -}}

# lookup secret name from garden object, extract client_secret value
{{- define "dashboard.clientSecret" -}}
{{- $clientSecretName := (lookup "operator.gardener.cloud/v1alpha1" "Garden" "" .Values.garden.name).spec.virtualCluster.gardener.gardenerDashboard.oidcConfig.secretRef.name }}
{{- (print ((lookup "v1" "Secret" "garden" $clientSecretName).data.client_secret | b64dec)) }}
{{- end }}

apiVersion: v1
kind: Secret
metadata:
  name: identity-yake-values
  namespace: yake
type: Opaque
stringData:
  values.yaml: |-
{{- if .Values.registryOverwrite }}
    image:
      repository: {{ include "replaceRegistry" (dict "ghcr.io/dexidp/dex" .Values.registryOverwrite) }}
{{- end }}
    connectors: ~
    issuerUrl: {{ include "garden.issuerURL" . }}
    dashboardOrigins:
      - 'https://{{ include "dashboard.domain" . }}'
    dashboardClientSecret: {{ include "dashboard.clientSecret" .}}
    tls: ~
    ingress:
      annotations:
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/use-port-in-redirects: "true"
        kubernetes.io/ingress.class: nginx-ingress-gardener
        cert.gardener.cloud/purpose: managed
        cert.gardener.cloud/class: base-cert-class
    podLabels:
      networking.gardener.cloud/to-runtime-apiserver: allowed
